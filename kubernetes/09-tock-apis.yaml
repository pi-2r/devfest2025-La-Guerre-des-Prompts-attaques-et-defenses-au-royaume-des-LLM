apiVersion: v1
kind: Service
metadata:
  name: nlp-api
  namespace: tock-genai
spec:
  selector:
    app: nlp-api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp-api
  namespace: tock-genai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nlp-api
  template:
    metadata:
      labels:
        app: nlp-api
    spec:
      containers:
      - name: nlp-api
        image: tock/nlp_api:25.3.1
        ports:
        - containerPort: 8080
        env:
        - name: tock_mongo_url
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: MONGO_URLS
        - name: nlp_duckling_url
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: NLP_DUCKLING_URL
        - name: tock_env
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: TOCK_ENV
        - name: tock_web_use_default_cors_handler
          value: "true"
        - name: tock_web_use_default_cors_handler_with_credentials
          value: "false"
        - name: tock_web_use_default_cors_handler_url
          value: "*"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: bot-api
  namespace: tock-genai
spec:
  selector:
    app: bot-api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot-api
  namespace: tock-genai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bot-api
  template:
    metadata:
      labels:
        app: bot-api
    spec:
      containers:
      - name: bot-api
        image: tock/bot_api:25.3.1
        ports:
        - containerPort: 8080
        env:
        - name: tock_mongo_url
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: MONGO_URLS
        - name: tock_nlp_service_url
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: NLP_SERVICE_URL
        - name: tock_env
          value: "integ"
        - name: tock_websocket_enabled
          value: "true"
        - name: tock_gen_ai_orchestrator_server_url
          valueFrom:
            configMapKeyRef:
              name: tock-config
              key: GEN_AI_ORCHESTRATOR_SERVER_URL
        - name: tock_gen_ai_orchestrator_client_request_timeout_ms
          value: "55000"
        - name: tock_gen_ai_orchestrator_technical_error
          value: "Technical error :( sorry!"
        - name: tock_gen_ai_orchestrator_document_number_neighbors
          value: "2"
        - name: tock_gen_ai_orchestrator_dialog_number_messages
          value: "5"
        - name: tock_gen_ai_orchestrator_rag_debug_enabled
          value: "true"
        - name: tock_gen_ai_orchestrator_vector_store_provider
          value: "PGVector"
        - name: tock_web_use_default_cors_handler
          value: "true"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
